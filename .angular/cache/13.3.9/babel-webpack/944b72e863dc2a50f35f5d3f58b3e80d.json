{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Inject, Component, ChangeDetectionStrategy, Input, HostListener, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { polyfill } from 'seamless-scroll-polyfill';\n\nfunction NgxScrollTopComponent_button_0__svg_svg_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 6);\n    i0.ɵɵelement(1, \"path\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"fill\", ctx_r3.symbolColor);\n  }\n}\n\nfunction NgxScrollTopComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 1, 2);\n    i0.ɵɵlistener(\"click\", function NgxScrollTopComponent_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.scrollToTop();\n    });\n    i0.ɵɵelementStart(2, \"div\", 3)(3, \"span\", null, 4);\n    i0.ɵɵprojection(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, NgxScrollTopComponent_button_0__svg_svg_6_Template, 2, 2, \"svg\", 5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(4);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"left\", ctx_r0.position === \"left\" ? \"20px\" : \"\")(\"background-color\", ctx_r0.backgroundColor)(\"width\", ctx_r0.size, \"px\")(\"height\", ctx_r0.size, \"px\");\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.theme);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", _r2.childNodes.length === 0);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nclass NgxScrollTopCoreService {\n  constructor(document) {\n    this.document = document;\n    this.scrolledFromTop = false;\n    this.isBrowser = typeof window !== 'undefined';\n    this.alreadyActivated = false;\n  }\n\n  onWindowScroll(mode) {\n    var _a, _b;\n\n    const position = ((_a = this.document.documentElement) === null || _a === void 0 ? void 0 : _a.scrollTop) || ((_b = this.document.scrollingElement) === null || _b === void 0 ? void 0 : _b.scrollTop);\n\n    switch (mode) {\n      case 'classic':\n        return this.classicMode(position);\n\n      case 'smart':\n        return this.smartMode(position);\n    }\n  }\n\n  classicMode(position) {\n    if (this.isBrowser && position > window.innerHeight) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  smartMode(position) {\n    let show = false;\n\n    if (position === 0) {\n      show = false;\n      this.scrolledFromTop = false;\n    }\n\n    if (this.scrolledFromTop && this.scrollOffset > position) {\n      show = true;\n    }\n\n    if (this.isBrowser && position > window.innerHeight * 2) {\n      this.scrolledFromTop = true;\n      this.scrollOffset = position;\n    }\n\n    return show;\n  }\n\n  scrollToTop() {\n    if (this.isBrowser) {\n      // Kick off the polyfill for iOS Safari\n      if (!this.alreadyActivated) {\n        polyfill();\n        this.alreadyActivated = true;\n      } // Scroll to the top\n\n\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n  }\n\n}\n\nNgxScrollTopCoreService.ɵfac = function NgxScrollTopCoreService_Factory(t) {\n  return new (t || NgxScrollTopCoreService)(i0.ɵɵinject(DOCUMENT));\n};\n\nNgxScrollTopCoreService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgxScrollTopCoreService,\n  factory: NgxScrollTopCoreService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxScrollTopCoreService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nclass NgxScrollTopComponent {\n  constructor(core, cdr) {\n    this.core = core;\n    this.cdr = cdr;\n    this.position = 'right';\n    this.theme = 'gray';\n    this.mode = 'classic';\n    this.show = false;\n  }\n\n  onWindowScroll() {\n    const show = this.core.onWindowScroll(this.mode); // Performance boost. Only update the state if it has changed.\n\n    if (this.show !== show) {\n      this.show = show;\n      this.cdr.markForCheck();\n    }\n  }\n\n  ngOnChanges(changes) {\n    // Deprecation warning. It will be removed soon.\n    if (changes.symbol) {\n      console.error(`NgxScrollTop: You are trying to set \\`${changes['symbol'].currentValue}\\` as your symbol but Input \\`[symbol]=\"\\'↑\\'\"\\` is deprecated now.\\n\\r`, `Use \\`Content projection\\` method, like this:\\n\\r\\n\\r`, `<ngx-scrolltop>${changes['symbol'].currentValue}</ngx-scrolltop>\\n\\r\\n\\r`, `More info: https://github.com/bartholomej/ngx-scrolltop#symbol`);\n    }\n  }\n\n  scrollToTop() {\n    this.core.scrollToTop();\n  }\n\n}\n\nNgxScrollTopComponent.ɵfac = function NgxScrollTopComponent_Factory(t) {\n  return new (t || NgxScrollTopComponent)(i0.ɵɵdirectiveInject(NgxScrollTopCoreService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNgxScrollTopComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxScrollTopComponent,\n  selectors: [[\"ngx-scrolltop\"]],\n  hostBindings: function NgxScrollTopComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"scroll\", function NgxScrollTopComponent_scroll_HostBindingHandler() {\n        return ctx.onWindowScroll();\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    backgroundColor: \"backgroundColor\",\n    symbolColor: \"symbolColor\",\n    size: \"size\",\n    symbol: \"symbol\",\n    position: \"position\",\n    theme: \"theme\",\n    mode: \"mode\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[\"type\", \"button\", \"role\", \"button\", \"aria-label\", \"Scroll to top of the page\", \"tabindex\", \"0\", \"class\", \"scrolltop-button\", 3, \"ngClass\", \"left\", \"backgroundColor\", \"width\", \"height\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"role\", \"button\", \"aria-label\", \"Scroll to top of the page\", \"tabindex\", \"0\", 1, \"scrolltop-button\", 3, \"ngClass\", \"click\"], [\"scrollTopButton\", \"\"], [1, \"symbol-container\"], [\"ref\", \"\"], [\"aria-hidden\", \"true\", \"focusable\", \"false\", \"role\", \"img\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 448 512\", 3, \"fill\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", \"focusable\", \"false\", \"role\", \"img\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 448 512\"], [\"d\", \"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\"]],\n  template: function NgxScrollTopComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NgxScrollTopComponent_button_0_Template, 7, 10, \"button\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.show);\n    }\n  },\n  directives: [i2.NgIf, i2.NgClass],\n  styles: [\"button[_ngcontent-%COMP%]{outline:0;-webkit-user-select:none;user-select:none}.scrolltop-button[_ngcontent-%COMP%]{position:fixed;display:flex;justify-content:center;align-items:center;border-radius:50%;padding:0;width:40px;height:40px;right:20px;bottom:20px;cursor:pointer;border:none;transition:opacity .1s linear;z-index:10000;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.scrolltop-button[_ngcontent-%COMP%]:hover{opacity:.92}.scrolltop-button[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:15px}.scrolltop-button[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{transform:translateY(10%);width:35%;vertical-align:baseline}.scrolltop-button.black[_ngcontent-%COMP%]{background-color:#000;color:#fff}.scrolltop-button.black[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.black[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fff}.scrolltop-button.black[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#fff}.scrolltop-button.white[_ngcontent-%COMP%]{background-color:#fff;color:#000}.scrolltop-button.white[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.white[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#000}.scrolltop-button.white[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#000}.scrolltop-button.gray[_ngcontent-%COMP%]{background-color:#212121;color:#fafafa}.scrolltop-button.gray[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.gray[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fafafa}.scrolltop-button.gray[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#fafafa}.scrolltop-button.grey[_ngcontent-%COMP%]{background-color:#212121;color:#fafafa}.scrolltop-button.grey[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.grey[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fafafa}.scrolltop-button.grey[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#fafafa}.scrolltop-button.brown[_ngcontent-%COMP%]{background-color:#3e2723;color:#efebe9}.scrolltop-button.brown[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.brown[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#efebe9}.scrolltop-button.brown[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#efebe9}.scrolltop-button.deeporange[_ngcontent-%COMP%]{background-color:#bf360c;color:#fbe9e7}.scrolltop-button.deeporange[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.deeporange[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fbe9e7}.scrolltop-button.deeporange[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#fbe9e7}.scrolltop-button.orange[_ngcontent-%COMP%]{background-color:#ff6d00;color:#fff3e0}.scrolltop-button.orange[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.orange[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fff3e0}.scrolltop-button.orange[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#fff3e0}.scrolltop-button.yellow[_ngcontent-%COMP%]{background-color:#ffd600;color:#fffde7}.scrolltop-button.yellow[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.yellow[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fffde7}.scrolltop-button.yellow[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#fffde7}.scrolltop-button.green[_ngcontent-%COMP%]{background-color:#1b5e20;color:#e8f5e9}.scrolltop-button.green[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.green[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#e8f5e9}.scrolltop-button.green[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#e8f5e9}.scrolltop-button.blue[_ngcontent-%COMP%]{background-color:#2962ff;color:#e3f2fd}.scrolltop-button.blue[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.blue[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#e3f2fd}.scrolltop-button.blue[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#e3f2fd}.scrolltop-button.purple[_ngcontent-%COMP%]{background-color:#4a148c;color:#f3e5f5}.scrolltop-button.purple[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.purple[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#f3e5f5}.scrolltop-button.purple[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#f3e5f5}.scrolltop-button.deeppurple[_ngcontent-%COMP%]{background-color:#311b92;color:#ede7f6}.scrolltop-button.deeppurple[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.deeppurple[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#ede7f6}.scrolltop-button.deeppurple[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#ede7f6}.scrolltop-button.pink[_ngcontent-%COMP%]{background-color:#880e4f;color:#fce4ec}.scrolltop-button.pink[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.pink[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fce4ec}.scrolltop-button.pink[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#fce4ec}.scrolltop-button.red[_ngcontent-%COMP%]{background-color:#b71c1c;color:#ffebee}.scrolltop-button.red[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.red[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#ffebee}.scrolltop-button.red[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#ffebee}.scrolltop-button.indigo[_ngcontent-%COMP%]{background-color:#1a237e;color:#e8eaf6}.scrolltop-button.indigo[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.indigo[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#e8eaf6}.scrolltop-button.indigo[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#e8eaf6}.scrolltop-button.lightblue[_ngcontent-%COMP%]{background-color:#01579b;color:#e1f5fe}.scrolltop-button.lightblue[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.lightblue[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#e1f5fe}.scrolltop-button.lightblue[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#e1f5fe}.scrolltop-button.cyan[_ngcontent-%COMP%]{background-color:#006064;color:#e0f7fa}.scrolltop-button.cyan[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.cyan[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#e0f7fa}.scrolltop-button.cyan[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#e0f7fa}.scrolltop-button.teal[_ngcontent-%COMP%]{background-color:#004d40;color:#e0f2f1}.scrolltop-button.teal[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.teal[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#e0f2f1}.scrolltop-button.teal[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#e0f2f1}.scrolltop-button.lightgreen[_ngcontent-%COMP%]{background-color:#33691e;color:#f1f8e9}.scrolltop-button.lightgreen[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.lightgreen[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#f1f8e9}.scrolltop-button.lightgreen[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#f1f8e9}.scrolltop-button.lime[_ngcontent-%COMP%]{background-color:#827717;color:#f9fbe7}.scrolltop-button.lime[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.lime[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#f9fbe7}.scrolltop-button.lime[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#f9fbe7}.scrolltop-button.amber[_ngcontent-%COMP%]{background-color:#ff6f00;color:#fff8e1}.scrolltop-button.amber[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.amber[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fff8e1}.scrolltop-button.amber[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#fff8e1}.scrolltop-button.bluegrey[_ngcontent-%COMP%]{background-color:#263238;color:#eceff1}.scrolltop-button.bluegrey[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%], .scrolltop-button.bluegrey[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#eceff1}.scrolltop-button.bluegrey[_ngcontent-%COMP%]   .symbol-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#eceff1}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxScrollTopComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-scrolltop',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<button\\n  *ngIf=\\\"show\\\"\\n  type=\\\"button\\\"\\n  role=\\\"button\\\"\\n  aria-label=\\\"Scroll to top of the page\\\"\\n  tabindex=\\\"0\\\"\\n  class=\\\"scrolltop-button\\\"\\n  #scrollTopButton\\n  (click)=\\\"scrollToTop()\\\"\\n  [ngClass]=\\\"theme\\\"\\n  [style.left]=\\\"position === 'left' ? '20px' : ''\\\"\\n  [style.backgroundColor]=\\\"backgroundColor\\\"\\n  [style.width.px]=\\\"size\\\"\\n  [style.height.px]=\\\"size\\\">\\n  <div class=\\\"symbol-container\\\">\\n    <span #ref>\\n      <ng-content></ng-content>\\n    </span>\\n    <svg *ngIf=\\\"ref.childNodes.length === 0\\\"\\n      aria-hidden=\\\"true\\\"\\n      [style.fill]=\\\"symbolColor\\\"\\n      focusable=\\\"false\\\"\\n      role=\\\"img\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 0 448 512\\\">\\n      <path\\n        d=\\\"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\\\">\\n      </path>\\n    </svg>\\n  </div>\\n</button>\\n\",\n      styles: [\"button{outline:0;-webkit-user-select:none;user-select:none}.scrolltop-button{position:fixed;display:flex;justify-content:center;align-items:center;border-radius:50%;padding:0;width:40px;height:40px;right:20px;bottom:20px;cursor:pointer;border:none;transition:opacity .1s linear;z-index:10000;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.scrolltop-button:hover{opacity:.92}.scrolltop-button .symbol-container span{font-size:15px}.scrolltop-button .symbol-container svg{transform:translateY(10%);width:35%;vertical-align:baseline}.scrolltop-button.black{background-color:#000;color:#fff}.scrolltop-button.black .symbol-container,.scrolltop-button.black .symbol-container span{color:#fff}.scrolltop-button.black .symbol-container svg{fill:#fff}.scrolltop-button.white{background-color:#fff;color:#000}.scrolltop-button.white .symbol-container,.scrolltop-button.white .symbol-container span{color:#000}.scrolltop-button.white .symbol-container svg{fill:#000}.scrolltop-button.gray{background-color:#212121;color:#fafafa}.scrolltop-button.gray .symbol-container,.scrolltop-button.gray .symbol-container span{color:#fafafa}.scrolltop-button.gray .symbol-container svg{fill:#fafafa}.scrolltop-button.grey{background-color:#212121;color:#fafafa}.scrolltop-button.grey .symbol-container,.scrolltop-button.grey .symbol-container span{color:#fafafa}.scrolltop-button.grey .symbol-container svg{fill:#fafafa}.scrolltop-button.brown{background-color:#3e2723;color:#efebe9}.scrolltop-button.brown .symbol-container,.scrolltop-button.brown .symbol-container span{color:#efebe9}.scrolltop-button.brown .symbol-container svg{fill:#efebe9}.scrolltop-button.deeporange{background-color:#bf360c;color:#fbe9e7}.scrolltop-button.deeporange .symbol-container,.scrolltop-button.deeporange .symbol-container span{color:#fbe9e7}.scrolltop-button.deeporange .symbol-container svg{fill:#fbe9e7}.scrolltop-button.orange{background-color:#ff6d00;color:#fff3e0}.scrolltop-button.orange .symbol-container,.scrolltop-button.orange .symbol-container span{color:#fff3e0}.scrolltop-button.orange .symbol-container svg{fill:#fff3e0}.scrolltop-button.yellow{background-color:#ffd600;color:#fffde7}.scrolltop-button.yellow .symbol-container,.scrolltop-button.yellow .symbol-container span{color:#fffde7}.scrolltop-button.yellow .symbol-container svg{fill:#fffde7}.scrolltop-button.green{background-color:#1b5e20;color:#e8f5e9}.scrolltop-button.green .symbol-container,.scrolltop-button.green .symbol-container span{color:#e8f5e9}.scrolltop-button.green .symbol-container svg{fill:#e8f5e9}.scrolltop-button.blue{background-color:#2962ff;color:#e3f2fd}.scrolltop-button.blue .symbol-container,.scrolltop-button.blue .symbol-container span{color:#e3f2fd}.scrolltop-button.blue .symbol-container svg{fill:#e3f2fd}.scrolltop-button.purple{background-color:#4a148c;color:#f3e5f5}.scrolltop-button.purple .symbol-container,.scrolltop-button.purple .symbol-container span{color:#f3e5f5}.scrolltop-button.purple .symbol-container svg{fill:#f3e5f5}.scrolltop-button.deeppurple{background-color:#311b92;color:#ede7f6}.scrolltop-button.deeppurple .symbol-container,.scrolltop-button.deeppurple .symbol-container span{color:#ede7f6}.scrolltop-button.deeppurple .symbol-container svg{fill:#ede7f6}.scrolltop-button.pink{background-color:#880e4f;color:#fce4ec}.scrolltop-button.pink .symbol-container,.scrolltop-button.pink .symbol-container span{color:#fce4ec}.scrolltop-button.pink .symbol-container svg{fill:#fce4ec}.scrolltop-button.red{background-color:#b71c1c;color:#ffebee}.scrolltop-button.red .symbol-container,.scrolltop-button.red .symbol-container span{color:#ffebee}.scrolltop-button.red .symbol-container svg{fill:#ffebee}.scrolltop-button.indigo{background-color:#1a237e;color:#e8eaf6}.scrolltop-button.indigo .symbol-container,.scrolltop-button.indigo .symbol-container span{color:#e8eaf6}.scrolltop-button.indigo .symbol-container svg{fill:#e8eaf6}.scrolltop-button.lightblue{background-color:#01579b;color:#e1f5fe}.scrolltop-button.lightblue .symbol-container,.scrolltop-button.lightblue .symbol-container span{color:#e1f5fe}.scrolltop-button.lightblue .symbol-container svg{fill:#e1f5fe}.scrolltop-button.cyan{background-color:#006064;color:#e0f7fa}.scrolltop-button.cyan .symbol-container,.scrolltop-button.cyan .symbol-container span{color:#e0f7fa}.scrolltop-button.cyan .symbol-container svg{fill:#e0f7fa}.scrolltop-button.teal{background-color:#004d40;color:#e0f2f1}.scrolltop-button.teal .symbol-container,.scrolltop-button.teal .symbol-container span{color:#e0f2f1}.scrolltop-button.teal .symbol-container svg{fill:#e0f2f1}.scrolltop-button.lightgreen{background-color:#33691e;color:#f1f8e9}.scrolltop-button.lightgreen .symbol-container,.scrolltop-button.lightgreen .symbol-container span{color:#f1f8e9}.scrolltop-button.lightgreen .symbol-container svg{fill:#f1f8e9}.scrolltop-button.lime{background-color:#827717;color:#f9fbe7}.scrolltop-button.lime .symbol-container,.scrolltop-button.lime .symbol-container span{color:#f9fbe7}.scrolltop-button.lime .symbol-container svg{fill:#f9fbe7}.scrolltop-button.amber{background-color:#ff6f00;color:#fff8e1}.scrolltop-button.amber .symbol-container,.scrolltop-button.amber .symbol-container span{color:#fff8e1}.scrolltop-button.amber .symbol-container svg{fill:#fff8e1}.scrolltop-button.bluegrey{background-color:#263238;color:#eceff1}.scrolltop-button.bluegrey .symbol-container,.scrolltop-button.bluegrey .symbol-container span{color:#eceff1}.scrolltop-button.bluegrey .symbol-container svg{fill:#eceff1}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgxScrollTopCoreService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    backgroundColor: [{\n      type: Input\n    }],\n    symbolColor: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    symbol: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    onWindowScroll: [{\n      type: HostListener,\n      args: ['window:scroll']\n    }]\n  });\n})();\n\nclass NgxScrollTopDirective {\n  constructor(el, core) {\n    this.el = el;\n    this.core = core;\n    this.mode = 'classic';\n    this.show = false;\n    this.hideElement();\n  }\n\n  onWindowScroll() {\n    const show = this.core.onWindowScroll(this.mode); // Performance boost. Only update the DOM when the state changes.\n\n    if (this.show !== show) {\n      show ? this.showElement() : this.hideElement();\n      this.show = show;\n    }\n  }\n\n  onClick() {\n    this.scrollToTop();\n  }\n\n  hideElement() {\n    this.el.nativeElement.style.display = 'none';\n  }\n\n  showElement() {\n    this.el.nativeElement.style.display = '';\n  }\n\n  scrollToTop() {\n    this.core.scrollToTop();\n  }\n\n}\n\nNgxScrollTopDirective.ɵfac = function NgxScrollTopDirective_Factory(t) {\n  return new (t || NgxScrollTopDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgxScrollTopCoreService));\n};\n\nNgxScrollTopDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxScrollTopDirective,\n  selectors: [[\"\", \"ngxScrollTop\", \"\"]],\n  hostBindings: function NgxScrollTopDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"scroll\", function NgxScrollTopDirective_scroll_HostBindingHandler() {\n        return ctx.onWindowScroll();\n      }, false, i0.ɵɵresolveWindow)(\"click\", function NgxScrollTopDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    mode: [\"ngxScrollTopMode\", \"mode\"]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxScrollTopDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxScrollTop]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NgxScrollTopCoreService\n    }];\n  }, {\n    mode: [{\n      type: Input,\n      args: ['ngxScrollTopMode']\n    }],\n    onWindowScroll: [{\n      type: HostListener,\n      args: ['window:scroll']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n\nclass NgxScrollTopModule {}\n\nNgxScrollTopModule.ɵfac = function NgxScrollTopModule_Factory(t) {\n  return new (t || NgxScrollTopModule)();\n};\n\nNgxScrollTopModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxScrollTopModule\n});\nNgxScrollTopModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [NgxScrollTopCoreService],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxScrollTopModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxScrollTopComponent, NgxScrollTopDirective],\n      imports: [CommonModule],\n      providers: [NgxScrollTopCoreService],\n      exports: [NgxScrollTopComponent, NgxScrollTopDirective]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-scrolltop\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NgxScrollTopComponent, NgxScrollTopDirective, NgxScrollTopModule };","map":{"version":3,"sources":["/Users/cannt/Desktop/CanNT/chung-huong-wedding/chung-huong-wedding/node_modules/ngx-scrolltop/fesm2015/ngx-scrolltop.mjs"],"names":["i0","Injectable","Inject","Component","ChangeDetectionStrategy","Input","HostListener","Directive","NgModule","i2","DOCUMENT","CommonModule","polyfill","NgxScrollTopCoreService","constructor","document","scrolledFromTop","isBrowser","window","alreadyActivated","onWindowScroll","mode","_a","_b","position","documentElement","scrollTop","scrollingElement","classicMode","smartMode","innerHeight","show","scrollOffset","scrollToTop","scroll","top","left","behavior","ɵfac","ɵprov","type","undefined","decorators","args","NgxScrollTopComponent","core","cdr","theme","markForCheck","ngOnChanges","changes","symbol","console","error","currentValue","ChangeDetectorRef","ɵcmp","NgIf","NgClass","selector","changeDetection","OnPush","template","styles","backgroundColor","symbolColor","size","NgxScrollTopDirective","el","hideElement","showElement","onClick","nativeElement","style","display","ElementRef","ɵdir","NgxScrollTopModule","ɵmod","ɵinj","declarations","imports","providers","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Inject, Component, ChangeDetectionStrategy, Input, HostListener, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { polyfill } from 'seamless-scroll-polyfill';\n\nclass NgxScrollTopCoreService {\n    constructor(document) {\n        this.document = document;\n        this.scrolledFromTop = false;\n        this.isBrowser = typeof window !== 'undefined';\n        this.alreadyActivated = false;\n    }\n    onWindowScroll(mode) {\n        var _a, _b;\n        const position = ((_a = this.document.documentElement) === null || _a === void 0 ? void 0 : _a.scrollTop) || ((_b = this.document.scrollingElement) === null || _b === void 0 ? void 0 : _b.scrollTop);\n        switch (mode) {\n            case 'classic':\n                return this.classicMode(position);\n            case 'smart':\n                return this.smartMode(position);\n        }\n    }\n    classicMode(position) {\n        if (this.isBrowser && position > window.innerHeight) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    smartMode(position) {\n        let show = false;\n        if (position === 0) {\n            show = false;\n            this.scrolledFromTop = false;\n        }\n        if (this.scrolledFromTop && this.scrollOffset > position) {\n            show = true;\n        }\n        if (this.isBrowser && position > window.innerHeight * 2) {\n            this.scrolledFromTop = true;\n            this.scrollOffset = position;\n        }\n        return show;\n    }\n    scrollToTop() {\n        if (this.isBrowser) {\n            // Kick off the polyfill for iOS Safari\n            if (!this.alreadyActivated) {\n                polyfill();\n                this.alreadyActivated = true;\n            }\n            // Scroll to the top\n            window.scroll({ top: 0, left: 0, behavior: 'smooth' });\n        }\n    }\n}\nNgxScrollTopCoreService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxScrollTopCoreService, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nNgxScrollTopCoreService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxScrollTopCoreService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxScrollTopCoreService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\nclass NgxScrollTopComponent {\n    constructor(core, cdr) {\n        this.core = core;\n        this.cdr = cdr;\n        this.position = 'right';\n        this.theme = 'gray';\n        this.mode = 'classic';\n        this.show = false;\n    }\n    onWindowScroll() {\n        const show = this.core.onWindowScroll(this.mode);\n        // Performance boost. Only update the state if it has changed.\n        if (this.show !== show) {\n            this.show = show;\n            this.cdr.markForCheck();\n        }\n    }\n    ngOnChanges(changes) {\n        // Deprecation warning. It will be removed soon.\n        if (changes.symbol) {\n            console.error(`NgxScrollTop: You are trying to set \\`${changes['symbol'].currentValue}\\` as your symbol but Input \\`[symbol]=\"\\'↑\\'\"\\` is deprecated now.\\n\\r`, `Use \\`Content projection\\` method, like this:\\n\\r\\n\\r`, `<ngx-scrolltop>${changes['symbol'].currentValue}</ngx-scrolltop>\\n\\r\\n\\r`, `More info: https://github.com/bartholomej/ngx-scrolltop#symbol`);\n        }\n    }\n    scrollToTop() {\n        this.core.scrollToTop();\n    }\n}\nNgxScrollTopComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxScrollTopComponent, deps: [{ token: NgxScrollTopCoreService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nNgxScrollTopComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: NgxScrollTopComponent, selector: \"ngx-scrolltop\", inputs: { backgroundColor: \"backgroundColor\", symbolColor: \"symbolColor\", size: \"size\", symbol: \"symbol\", position: \"position\", theme: \"theme\", mode: \"mode\" }, host: { listeners: { \"window:scroll\": \"onWindowScroll()\" } }, usesOnChanges: true, ngImport: i0, template: \"<button\\n  *ngIf=\\\"show\\\"\\n  type=\\\"button\\\"\\n  role=\\\"button\\\"\\n  aria-label=\\\"Scroll to top of the page\\\"\\n  tabindex=\\\"0\\\"\\n  class=\\\"scrolltop-button\\\"\\n  #scrollTopButton\\n  (click)=\\\"scrollToTop()\\\"\\n  [ngClass]=\\\"theme\\\"\\n  [style.left]=\\\"position === 'left' ? '20px' : ''\\\"\\n  [style.backgroundColor]=\\\"backgroundColor\\\"\\n  [style.width.px]=\\\"size\\\"\\n  [style.height.px]=\\\"size\\\">\\n  <div class=\\\"symbol-container\\\">\\n    <span #ref>\\n      <ng-content></ng-content>\\n    </span>\\n    <svg *ngIf=\\\"ref.childNodes.length === 0\\\"\\n      aria-hidden=\\\"true\\\"\\n      [style.fill]=\\\"symbolColor\\\"\\n      focusable=\\\"false\\\"\\n      role=\\\"img\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 0 448 512\\\">\\n      <path\\n        d=\\\"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\\\">\\n      </path>\\n    </svg>\\n  </div>\\n</button>\\n\", styles: [\"button{outline:0;-webkit-user-select:none;user-select:none}.scrolltop-button{position:fixed;display:flex;justify-content:center;align-items:center;border-radius:50%;padding:0;width:40px;height:40px;right:20px;bottom:20px;cursor:pointer;border:none;transition:opacity .1s linear;z-index:10000;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.scrolltop-button:hover{opacity:.92}.scrolltop-button .symbol-container span{font-size:15px}.scrolltop-button .symbol-container svg{transform:translateY(10%);width:35%;vertical-align:baseline}.scrolltop-button.black{background-color:#000;color:#fff}.scrolltop-button.black .symbol-container,.scrolltop-button.black .symbol-container span{color:#fff}.scrolltop-button.black .symbol-container svg{fill:#fff}.scrolltop-button.white{background-color:#fff;color:#000}.scrolltop-button.white .symbol-container,.scrolltop-button.white .symbol-container span{color:#000}.scrolltop-button.white .symbol-container svg{fill:#000}.scrolltop-button.gray{background-color:#212121;color:#fafafa}.scrolltop-button.gray .symbol-container,.scrolltop-button.gray .symbol-container span{color:#fafafa}.scrolltop-button.gray .symbol-container svg{fill:#fafafa}.scrolltop-button.grey{background-color:#212121;color:#fafafa}.scrolltop-button.grey .symbol-container,.scrolltop-button.grey .symbol-container span{color:#fafafa}.scrolltop-button.grey .symbol-container svg{fill:#fafafa}.scrolltop-button.brown{background-color:#3e2723;color:#efebe9}.scrolltop-button.brown .symbol-container,.scrolltop-button.brown .symbol-container span{color:#efebe9}.scrolltop-button.brown .symbol-container svg{fill:#efebe9}.scrolltop-button.deeporange{background-color:#bf360c;color:#fbe9e7}.scrolltop-button.deeporange .symbol-container,.scrolltop-button.deeporange .symbol-container span{color:#fbe9e7}.scrolltop-button.deeporange .symbol-container svg{fill:#fbe9e7}.scrolltop-button.orange{background-color:#ff6d00;color:#fff3e0}.scrolltop-button.orange .symbol-container,.scrolltop-button.orange .symbol-container span{color:#fff3e0}.scrolltop-button.orange .symbol-container svg{fill:#fff3e0}.scrolltop-button.yellow{background-color:#ffd600;color:#fffde7}.scrolltop-button.yellow .symbol-container,.scrolltop-button.yellow .symbol-container span{color:#fffde7}.scrolltop-button.yellow .symbol-container svg{fill:#fffde7}.scrolltop-button.green{background-color:#1b5e20;color:#e8f5e9}.scrolltop-button.green .symbol-container,.scrolltop-button.green .symbol-container span{color:#e8f5e9}.scrolltop-button.green .symbol-container svg{fill:#e8f5e9}.scrolltop-button.blue{background-color:#2962ff;color:#e3f2fd}.scrolltop-button.blue .symbol-container,.scrolltop-button.blue .symbol-container span{color:#e3f2fd}.scrolltop-button.blue .symbol-container svg{fill:#e3f2fd}.scrolltop-button.purple{background-color:#4a148c;color:#f3e5f5}.scrolltop-button.purple .symbol-container,.scrolltop-button.purple .symbol-container span{color:#f3e5f5}.scrolltop-button.purple .symbol-container svg{fill:#f3e5f5}.scrolltop-button.deeppurple{background-color:#311b92;color:#ede7f6}.scrolltop-button.deeppurple .symbol-container,.scrolltop-button.deeppurple .symbol-container span{color:#ede7f6}.scrolltop-button.deeppurple .symbol-container svg{fill:#ede7f6}.scrolltop-button.pink{background-color:#880e4f;color:#fce4ec}.scrolltop-button.pink .symbol-container,.scrolltop-button.pink .symbol-container span{color:#fce4ec}.scrolltop-button.pink .symbol-container svg{fill:#fce4ec}.scrolltop-button.red{background-color:#b71c1c;color:#ffebee}.scrolltop-button.red .symbol-container,.scrolltop-button.red .symbol-container span{color:#ffebee}.scrolltop-button.red .symbol-container svg{fill:#ffebee}.scrolltop-button.indigo{background-color:#1a237e;color:#e8eaf6}.scrolltop-button.indigo .symbol-container,.scrolltop-button.indigo .symbol-container span{color:#e8eaf6}.scrolltop-button.indigo .symbol-container svg{fill:#e8eaf6}.scrolltop-button.lightblue{background-color:#01579b;color:#e1f5fe}.scrolltop-button.lightblue .symbol-container,.scrolltop-button.lightblue .symbol-container span{color:#e1f5fe}.scrolltop-button.lightblue .symbol-container svg{fill:#e1f5fe}.scrolltop-button.cyan{background-color:#006064;color:#e0f7fa}.scrolltop-button.cyan .symbol-container,.scrolltop-button.cyan .symbol-container span{color:#e0f7fa}.scrolltop-button.cyan .symbol-container svg{fill:#e0f7fa}.scrolltop-button.teal{background-color:#004d40;color:#e0f2f1}.scrolltop-button.teal .symbol-container,.scrolltop-button.teal .symbol-container span{color:#e0f2f1}.scrolltop-button.teal .symbol-container svg{fill:#e0f2f1}.scrolltop-button.lightgreen{background-color:#33691e;color:#f1f8e9}.scrolltop-button.lightgreen .symbol-container,.scrolltop-button.lightgreen .symbol-container span{color:#f1f8e9}.scrolltop-button.lightgreen .symbol-container svg{fill:#f1f8e9}.scrolltop-button.lime{background-color:#827717;color:#f9fbe7}.scrolltop-button.lime .symbol-container,.scrolltop-button.lime .symbol-container span{color:#f9fbe7}.scrolltop-button.lime .symbol-container svg{fill:#f9fbe7}.scrolltop-button.amber{background-color:#ff6f00;color:#fff8e1}.scrolltop-button.amber .symbol-container,.scrolltop-button.amber .symbol-container span{color:#fff8e1}.scrolltop-button.amber .symbol-container svg{fill:#fff8e1}.scrolltop-button.bluegrey{background-color:#263238;color:#eceff1}.scrolltop-button.bluegrey .symbol-container,.scrolltop-button.bluegrey .symbol-container span{color:#eceff1}.scrolltop-button.bluegrey .symbol-container svg{fill:#eceff1}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxScrollTopComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-scrolltop', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<button\\n  *ngIf=\\\"show\\\"\\n  type=\\\"button\\\"\\n  role=\\\"button\\\"\\n  aria-label=\\\"Scroll to top of the page\\\"\\n  tabindex=\\\"0\\\"\\n  class=\\\"scrolltop-button\\\"\\n  #scrollTopButton\\n  (click)=\\\"scrollToTop()\\\"\\n  [ngClass]=\\\"theme\\\"\\n  [style.left]=\\\"position === 'left' ? '20px' : ''\\\"\\n  [style.backgroundColor]=\\\"backgroundColor\\\"\\n  [style.width.px]=\\\"size\\\"\\n  [style.height.px]=\\\"size\\\">\\n  <div class=\\\"symbol-container\\\">\\n    <span #ref>\\n      <ng-content></ng-content>\\n    </span>\\n    <svg *ngIf=\\\"ref.childNodes.length === 0\\\"\\n      aria-hidden=\\\"true\\\"\\n      [style.fill]=\\\"symbolColor\\\"\\n      focusable=\\\"false\\\"\\n      role=\\\"img\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 0 448 512\\\">\\n      <path\\n        d=\\\"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\\\">\\n      </path>\\n    </svg>\\n  </div>\\n</button>\\n\", styles: [\"button{outline:0;-webkit-user-select:none;user-select:none}.scrolltop-button{position:fixed;display:flex;justify-content:center;align-items:center;border-radius:50%;padding:0;width:40px;height:40px;right:20px;bottom:20px;cursor:pointer;border:none;transition:opacity .1s linear;z-index:10000;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.scrolltop-button:hover{opacity:.92}.scrolltop-button .symbol-container span{font-size:15px}.scrolltop-button .symbol-container svg{transform:translateY(10%);width:35%;vertical-align:baseline}.scrolltop-button.black{background-color:#000;color:#fff}.scrolltop-button.black .symbol-container,.scrolltop-button.black .symbol-container span{color:#fff}.scrolltop-button.black .symbol-container svg{fill:#fff}.scrolltop-button.white{background-color:#fff;color:#000}.scrolltop-button.white .symbol-container,.scrolltop-button.white .symbol-container span{color:#000}.scrolltop-button.white .symbol-container svg{fill:#000}.scrolltop-button.gray{background-color:#212121;color:#fafafa}.scrolltop-button.gray .symbol-container,.scrolltop-button.gray .symbol-container span{color:#fafafa}.scrolltop-button.gray .symbol-container svg{fill:#fafafa}.scrolltop-button.grey{background-color:#212121;color:#fafafa}.scrolltop-button.grey .symbol-container,.scrolltop-button.grey .symbol-container span{color:#fafafa}.scrolltop-button.grey .symbol-container svg{fill:#fafafa}.scrolltop-button.brown{background-color:#3e2723;color:#efebe9}.scrolltop-button.brown .symbol-container,.scrolltop-button.brown .symbol-container span{color:#efebe9}.scrolltop-button.brown .symbol-container svg{fill:#efebe9}.scrolltop-button.deeporange{background-color:#bf360c;color:#fbe9e7}.scrolltop-button.deeporange .symbol-container,.scrolltop-button.deeporange .symbol-container span{color:#fbe9e7}.scrolltop-button.deeporange .symbol-container svg{fill:#fbe9e7}.scrolltop-button.orange{background-color:#ff6d00;color:#fff3e0}.scrolltop-button.orange .symbol-container,.scrolltop-button.orange .symbol-container span{color:#fff3e0}.scrolltop-button.orange .symbol-container svg{fill:#fff3e0}.scrolltop-button.yellow{background-color:#ffd600;color:#fffde7}.scrolltop-button.yellow .symbol-container,.scrolltop-button.yellow .symbol-container span{color:#fffde7}.scrolltop-button.yellow .symbol-container svg{fill:#fffde7}.scrolltop-button.green{background-color:#1b5e20;color:#e8f5e9}.scrolltop-button.green .symbol-container,.scrolltop-button.green .symbol-container span{color:#e8f5e9}.scrolltop-button.green .symbol-container svg{fill:#e8f5e9}.scrolltop-button.blue{background-color:#2962ff;color:#e3f2fd}.scrolltop-button.blue .symbol-container,.scrolltop-button.blue .symbol-container span{color:#e3f2fd}.scrolltop-button.blue .symbol-container svg{fill:#e3f2fd}.scrolltop-button.purple{background-color:#4a148c;color:#f3e5f5}.scrolltop-button.purple .symbol-container,.scrolltop-button.purple .symbol-container span{color:#f3e5f5}.scrolltop-button.purple .symbol-container svg{fill:#f3e5f5}.scrolltop-button.deeppurple{background-color:#311b92;color:#ede7f6}.scrolltop-button.deeppurple .symbol-container,.scrolltop-button.deeppurple .symbol-container span{color:#ede7f6}.scrolltop-button.deeppurple .symbol-container svg{fill:#ede7f6}.scrolltop-button.pink{background-color:#880e4f;color:#fce4ec}.scrolltop-button.pink .symbol-container,.scrolltop-button.pink .symbol-container span{color:#fce4ec}.scrolltop-button.pink .symbol-container svg{fill:#fce4ec}.scrolltop-button.red{background-color:#b71c1c;color:#ffebee}.scrolltop-button.red .symbol-container,.scrolltop-button.red .symbol-container span{color:#ffebee}.scrolltop-button.red .symbol-container svg{fill:#ffebee}.scrolltop-button.indigo{background-color:#1a237e;color:#e8eaf6}.scrolltop-button.indigo .symbol-container,.scrolltop-button.indigo .symbol-container span{color:#e8eaf6}.scrolltop-button.indigo .symbol-container svg{fill:#e8eaf6}.scrolltop-button.lightblue{background-color:#01579b;color:#e1f5fe}.scrolltop-button.lightblue .symbol-container,.scrolltop-button.lightblue .symbol-container span{color:#e1f5fe}.scrolltop-button.lightblue .symbol-container svg{fill:#e1f5fe}.scrolltop-button.cyan{background-color:#006064;color:#e0f7fa}.scrolltop-button.cyan .symbol-container,.scrolltop-button.cyan .symbol-container span{color:#e0f7fa}.scrolltop-button.cyan .symbol-container svg{fill:#e0f7fa}.scrolltop-button.teal{background-color:#004d40;color:#e0f2f1}.scrolltop-button.teal .symbol-container,.scrolltop-button.teal .symbol-container span{color:#e0f2f1}.scrolltop-button.teal .symbol-container svg{fill:#e0f2f1}.scrolltop-button.lightgreen{background-color:#33691e;color:#f1f8e9}.scrolltop-button.lightgreen .symbol-container,.scrolltop-button.lightgreen .symbol-container span{color:#f1f8e9}.scrolltop-button.lightgreen .symbol-container svg{fill:#f1f8e9}.scrolltop-button.lime{background-color:#827717;color:#f9fbe7}.scrolltop-button.lime .symbol-container,.scrolltop-button.lime .symbol-container span{color:#f9fbe7}.scrolltop-button.lime .symbol-container svg{fill:#f9fbe7}.scrolltop-button.amber{background-color:#ff6f00;color:#fff8e1}.scrolltop-button.amber .symbol-container,.scrolltop-button.amber .symbol-container span{color:#fff8e1}.scrolltop-button.amber .symbol-container svg{fill:#fff8e1}.scrolltop-button.bluegrey{background-color:#263238;color:#eceff1}.scrolltop-button.bluegrey .symbol-container,.scrolltop-button.bluegrey .symbol-container span{color:#eceff1}.scrolltop-button.bluegrey .symbol-container svg{fill:#eceff1}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgxScrollTopCoreService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { backgroundColor: [{\n                type: Input\n            }], symbolColor: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], symbol: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], onWindowScroll: [{\n                type: HostListener,\n                args: ['window:scroll']\n            }] } });\n\nclass NgxScrollTopDirective {\n    constructor(el, core) {\n        this.el = el;\n        this.core = core;\n        this.mode = 'classic';\n        this.show = false;\n        this.hideElement();\n    }\n    onWindowScroll() {\n        const show = this.core.onWindowScroll(this.mode);\n        // Performance boost. Only update the DOM when the state changes.\n        if (this.show !== show) {\n            show ? this.showElement() : this.hideElement();\n            this.show = show;\n        }\n    }\n    onClick() {\n        this.scrollToTop();\n    }\n    hideElement() {\n        this.el.nativeElement.style.display = 'none';\n    }\n    showElement() {\n        this.el.nativeElement.style.display = '';\n    }\n    scrollToTop() {\n        this.core.scrollToTop();\n    }\n}\nNgxScrollTopDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxScrollTopDirective, deps: [{ token: i0.ElementRef }, { token: NgxScrollTopCoreService }], target: i0.ɵɵFactoryTarget.Directive });\nNgxScrollTopDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: NgxScrollTopDirective, selector: \"[ngxScrollTop]\", inputs: { mode: [\"ngxScrollTopMode\", \"mode\"] }, host: { listeners: { \"window:scroll\": \"onWindowScroll()\", \"click\": \"onClick()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxScrollTopDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxScrollTop]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: NgxScrollTopCoreService }]; }, propDecorators: { mode: [{\n                type: Input,\n                args: ['ngxScrollTopMode']\n            }], onWindowScroll: [{\n                type: HostListener,\n                args: ['window:scroll']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass NgxScrollTopModule {\n}\nNgxScrollTopModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxScrollTopModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxScrollTopModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxScrollTopModule, declarations: [NgxScrollTopComponent, NgxScrollTopDirective], imports: [CommonModule], exports: [NgxScrollTopComponent, NgxScrollTopDirective] });\nNgxScrollTopModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxScrollTopModule, providers: [NgxScrollTopCoreService], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxScrollTopModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgxScrollTopComponent, NgxScrollTopDirective],\n                    imports: [CommonModule],\n                    providers: [NgxScrollTopCoreService],\n                    exports: [NgxScrollTopComponent, NgxScrollTopDirective],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-scrolltop\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxScrollTopComponent, NgxScrollTopDirective, NgxScrollTopModule };\n"]},"metadata":{},"sourceType":"module"}